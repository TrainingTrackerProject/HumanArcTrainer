@model HumanArcCompliance.Models.UserQuizViewModel
@Html.HiddenFor(m => m.isHR, new { id = "hrCheck" })
@Html.HiddenFor(m => m.isManager, new { id = "managerCheck" })
<!--For Jae: this is the example of how you can use the model with angular-->
<!--If you made Hidden elements for each of the properties you should be able to target them in the controller-->
<!-- there may be a better way to do this for example:-->
<!--since the model uses a list within a list (see the UserQuizViewModel object) there is a way to iterate over the list -->
<!--using Razor syntax (this is the code like above using the 'at' opperator) and then defining the directives on the-->
<!--element specifically you should be able to target the element in the $scope. Once there we can send the answers over-->
<!-- to the controller using ajax...... I would reccomend looking up 'iterating over lists in aps.net razor' -->
@Html.HiddenFor(m => m.title, new { id = "title"})
@Html.HiddenFor(m => m.description, new { id = "description" })
@Html.HiddenFor(m => m.media, new { id = "media" })

<div ng-app="QuizApp" ng-controller="QuizCtrl" ng-init="quiz">
    <h2>Quiz: {{quiz.title}}</h2>
    <h4>{{quiz.description}}</h4>
    <br />
    <div ng-repeat="question in questions">
        <!--Displays multiple choice questions-->
        <div ng-if="question.type == 'multipleChoice'">
            <div class="row">
                <div class="col-sm-4">
                    <label for="choices">{{quiz.questions.indexOf(question)+1}}. {{question.text}}</label>
                </div>
            </div>
            <div ng-repeat="answer in question.answers">
                <input type="radio" value="{{answer.text}}" name="{{question.text}}"> {{answer.text}}
            </div>
        </div>

        <!--Displays true/false questions-->
        <div ng-if="question.type == 'trueFalse'">
            <div class="row">
                <div class="col-sm-4">
                    <label for="choices">{{quiz.questions.indexOf(question)+1}}. {{question.text}}</label>
                </div>
            </div>
            <div ng-repeat="answer in question.answers">
                <input type="radio" value="{{answer.text}}" name="{{question.text}}"> {{answer.text}}
            </div>
        </div>

        <!--Displays short answer questions-->
        <div ng-if="question.type == 'shortAnswer'">
            <div class="row">
                <div class="col-sm-4">
                    <label for="choices">{{quiz.questions.indexOf(question)+1}}. {{question.text}}</label>
                </div>
            </div>
            <textarea rows="5" class="form-control" id="shortAnswerQuestion"></textarea>
        </div>
        <br />
    </div>

    @*TODO Submit user answers*@
    @*Modal for Submit confimation*@
    <div class="modal fade" id="confirm-submit" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    Confirm Submit
                </div>
                <div class="modal-body">
                    Are you sure you want to submit this quiz?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                    <button id="submit" class="btn btn-success success" onclick="location.href='@Url.Action("myTraining", "Training")'" ng-click="submitQuiz()">Submit</button>
                </div>
            </div>
        </div>
    </div>
    <button id="submitModal" type="button" data-toggle="modal" data-target="#confirm-submit" class="btn btn-primary pull-right">Submit Quiz</button>
</div>
<script src="~/Scripts/Quiz.js"></script>