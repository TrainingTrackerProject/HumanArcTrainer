//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HumanArcCompliance
{
    using HumanArcCompliance.Models;
    using System;
    using System.Collections.Generic;
    
    public partial class User
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public User()
        {
            this.UserQuizQuestionAnswers = new HashSet<UserQuizQuestionAnswer>();
        }
    
        public int id { get; set; }
        public string firstName { get; set; }
        public string lastName { get; set; }
        public string email { get; set; }
        public string userGroups { get; set; }
        public string SAMAccountName { get; set; }
        public string manager { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<UserQuizQuestionAnswer> UserQuizQuestionAnswers { get; set; }

        public UserViewModel userToModel(User myUser)
        {
            validation validate = new validation();
            UserViewModel vmUser = new UserViewModel();
            vmUser.firstName = myUser.firstName;
            vmUser.lastName = myUser.lastName;
            vmUser.email = myUser.email;
            vmUser.SAMAccountName = myUser.SAMAccountName;
            vmUser.manager = myUser.manager;
            vmUser.userGroups = myUser.userGroups.Split(',');
            vmUser.isHR = false;
            vmUser.isManager = false;
            if (validate.validateHR(vmUser.userGroups))
            {
                vmUser.isHR = true;
                vmUser.isManager = true;
            }
            else
            {
                if (validate.validateManager(vmUser.userGroups))
                {
                    vmUser.isManager = true;
                }
            }

            return vmUser;
        }
    }
}
